{"remainingRequest":"D:\\LibraryManagement\\library-management\\library\\library\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\LibraryManagement\\library-management\\library\\library\\vue\\src\\utils\\request.js","dependencies":[{"path":"D:\\LibraryManagement\\library-management\\library\\library\\vue\\src\\utils\\request.js","mtime":1719294664116},{"path":"D:\\LibraryManagement\\library-management\\library\\library\\vue\\babel.config.js","mtime":1719294648379},{"path":"D:\\LibraryManagement\\library-management\\library\\library\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719294651176},{"path":"D:\\LibraryManagement\\library-management\\library\\library\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1719294650893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAiLi4vcm91dGVyIjsKdmFyIHJlcXVlc3QgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICcvYXBpJywKICB0aW1lb3V0OiA1MDAwCn0pOyAvLyByZXF1ZXN0IOaLpuaIquWZqAovLyDlj6/ku6Xoh6ror7fmsYLlj5HpgIHliY3lr7nor7fmsYLlgZrkuIDkupvlpITnkIYKLy8g5q+U5aaC57uf5LiA5YqgdG9rZW7vvIzlr7nor7fmsYLlj4LmlbDnu5/kuIDliqDlr4YKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBjb25maWcuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JzsgLy8gY29uZmlnLmhlYWRlcnNbJ3Rva2VuJ10gPSB1c2VyLnRva2VuOyAgLy8g6K6+572u6K+35rGC5aS0CiAgLy/lj5blh7pzZXNzaW9uU3RvcmFnZemHjOmdoue8k+WtmOeahOeUqOaIt+S/oeaBrwoKICB2YXIgdXNlckpzb24gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIik7CgogIGlmICghdXNlckpzb24pIHsKICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSDmi6bmiKrlmagKLy8g5Y+v5Lul5Zyo5o6l5Y+j5ZON5bqU5ZCO57uf5LiA5aSE55CG57uT5p6cCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIOWmguaenOaYr+i/lOWbnueahOaWh+S7tgoKICBpZiAocmVzcG9uc2UuY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ2Jsb2InKSB7CiAgICByZXR1cm4gcmVzOwogIH0gLy8g5YW85a655pyN5Yqh56uv6L+U5Zue55qE5a2X56ym5Liy5pWw5o2uCgoKICBpZiAodHlwZW9mIHJlcyA9PT0gJ3N0cmluZycpIHsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9CgogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["D:/LibraryManagement/library-management/library/library/vue/src/utils/request.js"],"names":["axios","router","request","create","baseURL","timeout","interceptors","use","config","headers","userJson","sessionStorage","getItem","push","error","Promise","reject","response","res","data","responseType","JSON","parse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,MADgB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADuC,CAGvC;AACA;;AACA,MAAIC,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAf;;AACA,MAAG,CAACF,QAAJ,EACA;AACIT,IAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOL,MAAP;AACH,CAXD,EAWG,UAAAM,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAbD,E,CAeA;AACA;;AACAZ,OAAO,CAACI,YAAR,CAAqBW,QAArB,CAA8BV,GAA9B,CACI,UAAAU,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACT,MAAT,CAAgBY,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACD,SAAOA,GAAP;AACH,CAZL,EAaI,UAAAJ,KAAK,EAAI;AACLS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBL;AAoBA,eAAeZ,OAAf","sourcesContent":["import axios from 'axios'\r\nimport router from \"../router\";\r\n\r\nconst request = axios.create({\r\n    baseURL: '/api',\r\n    timeout: 5000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n\r\n    // config.headers['token'] = user.token;  // 设置请求头\r\n    //取出sessionStorage里面缓存的用户信息\r\n    let userJson = sessionStorage.getItem(\"user\")\r\n    if(!userJson)\r\n    {\r\n        router.push(\"/login\")\r\n    }\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default request\r\n\r\n"]}]}