{"remainingRequest":"D:\\Libr\\library\\library\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\Libr\\library\\library\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Libr\\library\\library\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Libr\\library\\library\\vue\\src\\views\\Chat.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Libr\\library\\library\\vue\\src\\views\\Chat.vue","mtime":1719407245746},{"path":"D:\\Libr\\library\\library\\vue\\babel.config.js","mtime":1719454509629},{"path":"D:\\Libr\\library\\library\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719454511256},{"path":"D:\\Libr\\library\\library\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1719454511098},{"path":"D:\\Libr\\library\\library\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719454511256},{"path":"D:\\Libr\\library\\library\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1719454517982}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6XFxMaWJyXFxsaWJyYXJ5XFxsaWJyYXJ5XFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgcmVxdWVzdCBmcm9tICIuLi91dGlscy9yZXF1ZXN0IjsKaW1wb3J0IHsgRWxNZXNzYWdlIH0gZnJvbSAiZWxlbWVudC1wbHVzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWxrTGlzdDogW3sKICAgICAgICBpZDogIjEiLAogICAgICAgIHBlcnNvbjogJ21lY2hhbmljYWwnLAogICAgICAgIHNheTogJ+S9oOWlve+8jOaIkeaYr+WbvuS5pummhkFJ5bCP5Yqp5omLXl9eLOivt+mXruacieS7gOS5iOWPr+S7peW4ruWIsOS9oOWRou+8nycKICAgICAgfV0sCiAgICAgIGlzTWluZTogMSwKICAgICAgY29udGVudFZhbDogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRRdWVzdGlvbjogZnVuY3Rpb24gZ2V0UXVlc3Rpb24oKSB7CiAgICAgIGlmICh0aGlzLmNvbnRlbnRWYWwgPT0gJycpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fovpPlhaXlhoXlrrknKTsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gYWRtaW7mj5Dpl67mlbDmja5wdXNoKCkKCgogICAgICB0aGlzLnRhbGtMaXN0LnB1c2goewogICAgICAgIGlkOiBEYXRlLm5vdygpLAogICAgICAgIHBlcnNvbjogJ2FkbWluJywKICAgICAgICBzYXk6IHRoaXMuY29udGVudFZhbAogICAgICB9KTsgLy8g5riF56m66L6T5YWl5qCP5pWw5o2uCgogICAgICB2YXIgcXVlc3Rpb24gPSB0aGlzLmNvbnRlbnRWYWw7CiAgICAgIHRoaXMuY29udGVudFZhbCA9ICcnOwogICAgICB0aGlzLmdldEFuc3dlcihxdWVzdGlvbik7CiAgICB9LAogICAgZ2V0QW5zd2VyOiBmdW5jdGlvbiBnZXRBbnN3ZXIocXVlc3Rpb24pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgLy8g6LCD55SoQVBJ6I635Y+W5Zue562U77yMIOaooeaLn+WQjuerr+i/lOWbnueahOaVsOaNrua1geW8j+i+k+WHugogICAgICAgICAgICAgICAgZGF0YSA9ICcnOyAvLyBtZWNoYW5pY2FsIOaooeaLn+WbnuetlAoKICAgICAgICAgICAgICAgIHJlcXVlc3QuZ2V0KCIvY2hhdD9xdWVzdGlvbj0iLmNvbmNhdChxdWVzdGlvbikpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICA7CgogICAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YSA9ICcnICsgcmVzLm1zZzsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXMudGFsa0xpc3QucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICBpZDogRGF0ZS5ub3coKSwKICAgICAgICAgICAgICAgICAgICAgIHBlcnNvbjogJ21lY2hhbmljYWwnLAogICAgICAgICAgICAgICAgICAgICAgc2F5OiAnLi4uJwogICAgICAgICAgICAgICAgICAgIH0pOyAvLyDmtYHlvI/ovpPlh7rmloflrZfpgJDkuKrlsZXnpLoKCgogICAgICAgICAgICAgICAgICAgIHZhciB0ZXh0ID0gIiI7CiAgICAgICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9IF90aGlzLnRhbGtMaXN0Lmxlbmd0aDsKCiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICB0ZXh0ICs9IGRhdGEuY2hhckF0KGkpOwogICAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCAxMDApOwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy50YWxrTGlzdFtsZW5ndGggLSAxXS5zYXkgPSB0ZXh0OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["D:\\Libr\\library\\library\\vue\\src\\views\\Chat.vue"],"names":[],"mappings":";;;AAsBA,OAAO,OAAP,MAAoB,kBAApB;AACA,SAAQ,SAAR,QAAwB,cAAxB;AAEA,eAAe;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,QAAQ,EAAE,CACR;AAAE,QAAA,EAAE,EAAC,GAAL;AAAU,QAAA,MAAM,EAAE,YAAlB;AAAgC,QAAA,GAAG,EAAE;AAArC,OADQ,CADL;AAIL,MAAA,MAAM,EAAE,CAJH;AAKL,MAAA,UAAU,EAAE;AALP,KAAP;AAOD,GAVY;AAWb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACO;AACZ,UAAI,KAAK,UAAL,IAAmB,EAAvB,EAA2B;AACzB,aAAK,QAAL,CAAc,KAAd,CAAoB,OAApB;AACA;AACF,OAJY,CAMZ;;;AACA,WAAK,QAAL,CAAc,IAAd,CAAmB;AAAE,QAAA,EAAE,EAAE,IAAI,CAAC,GAAL,EAAN;AAAkB,QAAA,MAAM,EAAC,OAAzB;AAAkC,QAAA,GAAG,EAAE,KAAK;AAA5C,OAAnB,EAPY,CAQZ;;AACA,UAAI,QAAQ,GAAC,KAAK,UAAlB;AACA,WAAK,UAAL,GAAkB,EAAlB;AACA,WAAK,SAAL,CAAe,QAAf;AACD,KAbM;AAcD,IAAA,SAdC,qBAcS,QAdT,EAckB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB;AACI,gBAAA,IAFmB,GAEb,EAFa,EAIvB;;AACA,gBAAA,OAAO,CAAC,GAAR,0BAA8B,QAA9B,GAA0C,IAA1C,CAA+C,UAAC,GAAD,EAAS;AAC3D;;AACK,sBAAG,GAAG,CAAC,IAAJ,IAAU,GAAb,EAAiB;AACf,oBAAA,IAAG,GAAI,KAAG,GAAG,CAAC,GAAd;;AACA,oBAAA,KAAI,CAAC,QAAL,CAAc,IAAd,CAAmB;AAAE,sBAAA,EAAE,EAAE,IAAI,CAAC,GAAL,EAAN;AAAkB,sBAAA,MAAM,EAAC,YAAzB;AAAuC,sBAAA,GAAG,EAAE;AAA5C,qBAAnB,EAFe,CAGf;;;AACA,wBAAI,IAAG,GAAI,EAAX;AACA,wBAAM,MAAK,GAAI,KAAI,CAAC,QAAL,CAAc,MAA7B;;AACA,yBAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,sBAAA,IAAG,IAAK,IAAI,CAAC,MAAL,CAAY,CAAZ,CAAR;AACC,0BAAI,OAAJ,CAAY,UAAC,OAAD,EAAa;AACxB,wBAAA,UAAU,CAAC,OAAD,EAAU,GAAV,CAAV;AACD,uBAFA;AAGD,sBAAA,KAAI,CAAC,QAAL,CAAc,MAAK,GAAI,CAAvB,EAA0B,GAA1B,GAA+B,IAA/B;AACF;AACD,mBAbD,MAaK;AACH,oBAAA,SAAS,CAAC,KAAV,CAAgB,GAAG,CAAC,GAApB;AACF;AACD,iBAlBD;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BzB;AAxCO;AAXI,CAAf","sourcesContent":["\r\n<template>\r\n  <div class=\"talkContent\">\r\n    <div class=\"talkShow\">\r\n      <div :class=\"[(item.person=='mechanical')?'mechanicalTalk':'mineTalk']\" v-for=\"(item,index) in talkList\" :key=\"index\">\r\n        <span>{{item.say}}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"talkInput\">\r\n      <form @submit.prevent=\"getQuestion\" class=\"userSearch\">\r\n        <el-input\r\n            placeholder=\"请输入内容\"\r\n            v-model=\"contentVal\"\r\n            size=\"big\">\r\n          <i slot=\"suffix\" class=\"el-input__icon el-icon-position\" style=\"cursor: pointer;\" @click=\"getQuestion\"></i>\r\n        </el-input>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"../utils/request\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      talkList: [\r\n        { id:\"1\", person: 'mechanical', say: '你好，我是图书馆AI小助手^_^,请问有什么可以帮到你呢？' },\r\n      ],\r\n      isMine: 1,\r\n      contentVal: '',\r\n    };\r\n  },\r\n  methods: {\r\n    getQuestion() {\r\n      if (this.contentVal == '') {\r\n        this.$message.error('请输入内容');\r\n        return;\r\n      }\r\n\r\n      // admin提问数据push()\r\n      this.talkList.push({ id: Date.now(), person:'admin', say: this.contentVal });\r\n      // 清空输入栏数据\r\n      let question=this.contentVal\r\n      this.contentVal = '';\r\n      this.getAnswer(question);\r\n    },\r\n    async getAnswer(question){\r\n      // 调用API获取回答， 模拟后端返回的数据流式输出\r\n      let data ='';\r\n\r\n      // mechanical 模拟回答\r\n      request.get(`/chat?question=${question}`).then((res) => {\r\n   ;\r\n        if(res.code==200){\r\n          data = ''+res.msg;\r\n          this.talkList.push({ id: Date.now(), person:'mechanical', say: '...' });\r\n          // 流式输出文字逐个展示\r\n          let text = \"\";\r\n          const length = this.talkList.length;\r\n          for (let i = 0; i < data.length; i++) {\r\n            text += data.charAt(i);\r\n             new Promise((resolve) => {\r\n              setTimeout(resolve, 100)\r\n            });\r\n            this.talkList[length - 1].say= text;\r\n          }\r\n        }else{\r\n          ElMessage.error(res.msg);\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.talkContent {\r\n  margin: 50px auto 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.talkShow {\r\n  height: 400px;\r\n  margin: 10px auto 0;\r\n  overflow: auto;\r\n}\r\n\r\n.talkInput {\r\n  margin: 10px auto 0;\r\n  display:flex;\r\n  justify-content: left;\r\n  width: 200%;\r\n  border-color: white;\r\n  border-radius: 0;\r\n\r\n}\r\n\r\n.mechanicalTalk {\r\n  margin: 10px;\r\n}\r\n\r\n.mechanicalTalk span {\r\n  display: inline-block;\r\n  background: white;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  border: 1px solid rgb(214, 216, 219);\r\n  border-top-left-radius: 0px;\r\n  word-break: break-all;\r\n  text-align: left;\r\n}\r\n\r\n.mineTalk {\r\n  margin: 10px;\r\n  text-align: right;\r\n}\r\n\r\n.mineTalk span {\r\n  display: inline-block;\r\n  border-radius: 10px;\r\n  border-top-right-radius: 0px;\r\n  background: #409eff;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  word-break: break-all;\r\n  text-align: left;\r\n}\r\n\r\n</style>\r\n\r\n"],"sourceRoot":""}]}